
* compile
  need to add
  : -lpthread
  when compile

* concept
  join
  detach

* pthread
** pthread_cancel
   defer it until it reaches a cancellation point.
   cause dead lock/memory leak if cancel unsafely!
   
   : pthread_testcancel()
   : this_thread::interruption_point()
   
polling ?

* boost
  use exception
  it'll call destructor automatically

* async
  #+BEGIN_SRC C++
  #include "future"
  int func();
  // start func() asynchronously in the background (now or later or never)
  // assign the result to the object of class std::future
  std::future<int> result(std::async(func());
  // do something else
  result.get();
  #+END_SRC
  
